#Covariates<-c('Other members carrying ST131', 'Hours spent at home', 'Presence of high density peristent carriers', 'Hospital admission in past 1 year')
Covariates<-c('Presence of high density peristent carriers', 'Hours spent at home','Hospital admission in past 1 year')
plotdata<-c()
for(i in 2:4){
plotdata[[i-1]]<-as.data.table(cbind(rep(Covariates[i-1],10000),exp(beta12$beta12[,i])))
}
plotdf<-rbindlist(plotdata)
colnames(plotdf)<-c('Covariates','estimates')
plotdf$Covariates<-as.factor(plotdf$Covariates)
plotdf$estimates<-as.numeric(plotdf$estimates)
ggplot(plotdf, aes(x=Covariates, y=estimates)) +
scale_x_discrete(name = "Covariates")+
scale_y_continuous(name = "Hazard Ratio", limits = c(0,4))+
geom_boxplot(outlier.colour="black", outlier.shape=NA,notch=FALSE)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title='Factors associated with acquisition of ST131')
beta21<-rstan::extract(indiv.2S.model, pars = 'beta21')#gives posterior values
plotdata<-c()
for(i in 2:4){
plotdata[[i-1]]<-as.data.table(cbind(rep(Covariates[i-1],10000),exp(beta21$beta21[,i])))
}
plotdf<-rbindlist(plotdata)
colnames(plotdf)<-c('Covariates','estimates')
plotdf$Covariates<-as.factor(plotdf$Covariates)
plotdf$estimates<-as.numeric(plotdf$estimates)
ggplot(plotdf, aes(x=Covariates, y=estimates)) +
scale_x_discrete(name = "Covariates")+
scale_y_continuous(name = "Hazard Ratio", limits = c(0,4))+
geom_boxplot(outlier.colour="black", outlier.shape=NA,notch=FALSE)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
labs(title='Factors associated with carriage duration of ST131')
infectedp=prop.test(matrix(c(numberinfected,numberinfectedcarryingST131 , numbernoninfected, numbernoninfectedcarryingst131),nrow=2))
infected=data.human[data.human$cov10_st131infection==1,]
infected=infected[order(infected$time_point),]
infected=infected[order(infected$subject.code),]
numberinfected=length(unique(infected$subject.code))
numberinfectedcarryingST131=sum(infected$stool_totalst131>0, na.rm = TRUE)
infecteddensity=round(mean(infected$st131posdensity)*100)
infected_summary <-statetable.msm(stoolpcr_state, subject.code, data=infected)
Q <- matrix(NA,nrow=2,ncol=2)
for(i in 1:dim(Q)[1]){ # Simple transition matrix (frequency based)
for(j in 1:dim(Q)[2]){
Q[i,j]<-as.matrix(infected_summary)[i,j]/sum(as.matrix(infected_summary)[i,])
}
}
infected.model <- msm(formula = stoolpcr_state ~ stool_time, subject=subject.code, data=infected, qmatrix = Q, gen.inits = TRUE)
infectedcarrytime=round(sojourn.msm(infected.model)[2,1])
noninfected=data.human[data.human$cov10_st131infection==0,]
noninfected=noninfected[grep('A',noninfected$subject.code),]
noninfected=noninfected[order(noninfected$time_point),]
noninfected=noninfected[order(noninfected$subject.code),]
numbernoninfectedcarryingst131=sum(noninfected$stool_totalst131>0, na.rm = TRUE)
numbernoninfected=length(unique(noninfected$subject.code))
noninfecteddensity= round(mean(noninfected$st131posdensity)*100)
noninfected_summary <-statetable.msm(stoolpcr_state, subject.code, data=noninfected)
Q <- matrix(NA,nrow=2,ncol=2)
for(i in 1:dim(Q)[1]){ # Simple transition matrix (frequency based)
for(j in 1:dim(Q)[2]){
Q[i,j]<-as.matrix(noninfected_summary)[i,j]/sum(as.matrix(noninfected_summary)[i,])
}
}
noninfected.model <- msm(formula = stoolpcr_state ~ stool_time, subject=subject.code, data=noninfected, qmatrix = Q, gen.inits = TRUE)
noninfectedcarrytime=round(sojourn.msm(noninfected.model)[2,1])
infectedp=prop.test(matrix(c(numberinfected,numberinfectedcarryingST131 , numbernoninfected, numbernoninfectedcarryingst131),nrow=2))
infect.df=data.frame(Infected=c(numberinfected ,numberinfectedcarryingST131, infectedcarrytime, infecteddensity),
Noninfected=c(numbernoninfected,numbernoninfectedcarryingst131, noninfectedcarrytime, noninfecteddensity),
p=c())
infectedp
infectedp=(prop.test(matrix(c(numberinfected,numberinfectedcarryingST131 , numbernoninfected, numbernoninfectedcarryingst131),nrow=2)))$
str(prop.test(matrix(c(numberinfected,numberinfectedcarryingST131 , numbernoninfected, numbernoninfectedcarryingst131),nrow=2)))
infectedp=(prop.test(matrix(c(numberinfected,numberinfectedcarryingST131 , numbernoninfected, numbernoninfectedcarryingst131),nrow=2)))$
summary(prop.test(matrix(c(numberinfected,numberinfectedcarryingST131 , numbernoninfected, numbernoninfectedcarryingst131),nrow=2)))
prop.test(matrix(c(numberinfected,numberinfectedcarryingST131 , numbernoninfected, numbernoninfectedcarryingst131),nrow=2))
infectedp=(prop.test(matrix(c(numberinfected,numberinfectedcarryingST131 , numbernoninfected, numbernoninfectedcarryingst131),nrow=2)))$
str(prop.test(matrix(c(numberinfected,numberinfectedcarryingST131 , numbernoninfected, numbernoninfectedcarryingst131),nrow=2)))
infectedp=prop.test(matrix(c(numberinfected,numberinfectedcarryingST131 , numbernoninfected, numbernoninfectedcarryingst131),nrow=2))
infectedp$p.value
t.test(noninfectedcarrytime,infectedcarrytime )
infected=data.human[data.human$cov10_st131infection==1,]
infected=infected[order(infected$time_point),]
infected=infected[order(infected$subject.code),]
numberinfected=length(unique(infected$subject.code))
numberinfectedcarryingST131=sum(infected$stool_totalst131>0, na.rm = TRUE)
infecteddensity=round(mean(infected$st131posdensity)*100)
infected_summary <-statetable.msm(stoolpcr_state, subject.code, data=infected)
Q <- matrix(NA,nrow=2,ncol=2)
for(i in 1:dim(Q)[1]){ # Simple transition matrix (frequency based)
for(j in 1:dim(Q)[2]){
Q[i,j]<-as.matrix(infected_summary)[i,j]/sum(as.matrix(infected_summary)[i,])
}
}
infected.model <- msm(formula = stoolpcr_state ~ stool_time, subject=subject.code, data=infected, qmatrix = Q, gen.inits = TRUE)
infectedcarrytime=round(sojourn.msm(infected.model)[2,1])
noninfected=data.human[data.human$cov10_st131infection==0,]
noninfected=noninfected[grep('A',noninfected$subject.code),]
noninfected=noninfected[order(noninfected$time_point),]
noninfected=noninfected[order(noninfected$subject.code),]
numbernoninfectedcarryingst131=sum(noninfected$stool_totalst131>0, na.rm = TRUE)
numbernoninfected=length(unique(noninfected$subject.code))
noninfecteddensity= round(mean(noninfected$st131posdensity)*100)
noninfected_summary <-statetable.msm(stoolpcr_state, subject.code, data=noninfected)
Q <- matrix(NA,nrow=2,ncol=2)
for(i in 1:dim(Q)[1]){ # Simple transition matrix (frequency based)
for(j in 1:dim(Q)[2]){
Q[i,j]<-as.matrix(noninfected_summary)[i,j]/sum(as.matrix(noninfected_summary)[i,])
}
}
noninfected.model <- msm(formula = stoolpcr_state ~ stool_time, subject=subject.code, data=noninfected, qmatrix = Q, gen.inits = TRUE)
noninfectedcarrytime=round(sojourn.msm(noninfected.model)[2,1])
infect.df=data.frame(Infected=c(numberinfected ,numberinfectedcarryingST131, infectedcarrytime, infecteddensity),
Noninfected=c(numbernoninfected,numbernoninfectedcarryingst131, noninfectedcarrytime, noninfecteddensity),
p=c('',infectedp, ))
infected=data.human[data.human$cov10_st131infection==1,]
infected=infected[order(infected$time_point),]
infected=infected[order(infected$subject.code),]
numberinfected=length(unique(infected$subject.code))
numberinfectedcarryingST131=sum(infected$stool_totalst131>0, na.rm = TRUE)
infecteddensity=round(mean(infected$st131posdensity)*100)
infected_summary <-statetable.msm(stoolpcr_state, subject.code, data=infected)
Q <- matrix(NA,nrow=2,ncol=2)
for(i in 1:dim(Q)[1]){ # Simple transition matrix (frequency based)
for(j in 1:dim(Q)[2]){
Q[i,j]<-as.matrix(infected_summary)[i,j]/sum(as.matrix(infected_summary)[i,])
}
}
infected.model <- msm(formula = stoolpcr_state ~ stool_time, subject=subject.code, data=infected, qmatrix = Q, gen.inits = TRUE)
infectedcarrytime=round(sojourn.msm(infected.model)[2,1])
noninfected=data.human[data.human$cov10_st131infection==0,]
noninfected=noninfected[grep('A',noninfected$subject.code),]
noninfected=noninfected[order(noninfected$time_point),]
noninfected=noninfected[order(noninfected$subject.code),]
numbernoninfectedcarryingst131=sum(noninfected$stool_totalst131>0, na.rm = TRUE)
numbernoninfected=length(unique(noninfected$subject.code))
noninfecteddensity= round(mean(noninfected$st131posdensity)*100)
noninfected_summary <-statetable.msm(stoolpcr_state, subject.code, data=noninfected)
Q <- matrix(NA,nrow=2,ncol=2)
for(i in 1:dim(Q)[1]){ # Simple transition matrix (frequency based)
for(j in 1:dim(Q)[2]){
Q[i,j]<-as.matrix(noninfected_summary)[i,j]/sum(as.matrix(noninfected_summary)[i,])
}
}
noninfected.model <- msm(formula = stoolpcr_state ~ stool_time, subject=subject.code, data=noninfected, qmatrix = Q, gen.inits = TRUE)
noninfectedcarrytime=round(sojourn.msm(noninfected.model)[2,1])
infect.df=data.frame(Infected=c(numberinfected ,numberinfectedcarryingST131, infectedcarrytime, infecteddensity),
Noninfected=c(numbernoninfected,numbernoninfectedcarryingst131, noninfectedcarrytime, noninfecteddensity))
rownames(infect.df)=c('Total number','Number colonised with ST131','Carriage duration (days)','Density of ST131 carriage (%)')
colnames(infect.df)=c('Infected with ST131', 'Infected with non-ST131', 'p-value')
infected=data.human[data.human$cov10_st131infection==1,]
infected=infected[order(infected$time_point),]
infected=infected[order(infected$subject.code),]
numberinfected=length(unique(infected$subject.code))
numberinfectedcarryingST131=sum(infected$stool_totalst131>0, na.rm = TRUE)
infecteddensity=round(mean(infected$st131posdensity)*100)
infected_summary <-statetable.msm(stoolpcr_state, subject.code, data=infected)
Q <- matrix(NA,nrow=2,ncol=2)
for(i in 1:dim(Q)[1]){ # Simple transition matrix (frequency based)
for(j in 1:dim(Q)[2]){
Q[i,j]<-as.matrix(infected_summary)[i,j]/sum(as.matrix(infected_summary)[i,])
}
}
infected.model <- msm(formula = stoolpcr_state ~ stool_time, subject=subject.code, data=infected, qmatrix = Q, gen.inits = TRUE)
infectedcarrytime=round(sojourn.msm(infected.model)[2,1])
noninfected=data.human[data.human$cov10_st131infection==0,]
noninfected=noninfected[grep('A',noninfected$subject.code),]
noninfected=noninfected[order(noninfected$time_point),]
noninfected=noninfected[order(noninfected$subject.code),]
numbernoninfectedcarryingst131=sum(noninfected$stool_totalst131>0, na.rm = TRUE)
numbernoninfected=length(unique(noninfected$subject.code))
noninfecteddensity= round(mean(noninfected$st131posdensity)*100)
noninfected_summary <-statetable.msm(stoolpcr_state, subject.code, data=noninfected)
Q <- matrix(NA,nrow=2,ncol=2)
for(i in 1:dim(Q)[1]){ # Simple transition matrix (frequency based)
for(j in 1:dim(Q)[2]){
Q[i,j]<-as.matrix(noninfected_summary)[i,j]/sum(as.matrix(noninfected_summary)[i,])
}
}
noninfected.model <- msm(formula = stoolpcr_state ~ stool_time, subject=subject.code, data=noninfected, qmatrix = Q, gen.inits = TRUE)
noninfectedcarrytime=round(sojourn.msm(noninfected.model)[2,1])
infect.df=data.frame(Infected=c(numberinfected ,numberinfectedcarryingST131, infectedcarrytime, infecteddensity),
Noninfected=c(numbernoninfected,numbernoninfectedcarryingst131, noninfectedcarrytime, noninfecteddensity))
rownames(infect.df)=c('Total number','Number colonised with ST131','Carriage duration (days)','Density of ST131 carriage (%)')
colnames(infect.df)=c('Infected with ST131', 'Infected with non-ST131')
knitr::kable(infect.df)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/moyin/Desktop/shitstuff/analysis/')
source('/Users/moyin/Desktop/shitstuff/analysis/st131 clean data 240419.R')
library(table1)
library(ggrepel) #avoid overlapping labels
library(msm)
library(data.table)
library(RColorBrewer)
n <- 2
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
col_vector = c('grey', 'red')
only1stool=as.character(data.human$subject.code[which(data.human$stool_total==1)])
data.human.msm=data.human[-match(only1stool,data.human$subject.code),]
data.human.msm$highdensityfamilies=ifelse(data.human.msm$highdensityfamilies==1, 'Yes', 'No')
ggplot(data=data.human.msm, mapping=aes(x=time_point, y=st131posdensity, color=as.factor(highdensityfamilies)))+
geom_line(aes(group=subject.code,color=as.factor(highdensityfamilies)))+
facet_wrap(~subject.code)+
labs(x='Sample number', y='Density of ST131 in each sample (%)', title="Density of E coli ST131 in stool samples per participant")+
scale_x_continuous(breaks=seq(1, 12, 2))+
scale_y_continuous(breaks=50)+
scale_colour_manual(name='Familes with high density ST131 carriers ', values=col_vector)+
theme(strip.background = element_blank(),
strip.text.x = element_blank(),
legend.position = 'bottom')
library(RColorBrewer)
n <- 34
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
ggplot(data=data.human.msm, mapping=aes(x=time_point, y=st131posdensity, color=as.factor(family.code)))+
geom_line(aes(group=subject.code,color=as.factor(family.code)))+
facet_wrap(~subject.code)+
labs(x='Sample number', y='Density of ST131 in each sample (%)', title="Density of E coli ST131 in stool samples per participant")+
scale_x_continuous(breaks=seq(1, 12, 2))+
scale_y_continuous(breaks=50)+
scale_colour_manual(name='Participating families', values=col_vector)+
theme(strip.background = element_blank(),
strip.text.x = element_blank())
library(RColorBrewer)
n <- 34
qual_col_pals = brewer.pal.info[brewer.pal.info$category == 'qual',]
col_vector = unlist(mapply(brewer.pal, qual_col_pals$maxcolors, rownames(qual_col_pals)))
ggplot(data=data.human.msm, mapping=aes(x=time_point, y=st131posdensity, color=as.factor(family.code)))+
geom_line(aes(group=subject.code,color=as.factor(family.code)))+
facet_wrap(~subject.code)+
labs(x='Sample number', y='Density of ST131 in each sample (%)', title="Density of E coli ST131 in stool samples per participant")+
scale_x_continuous(breaks=seq(1, 12, 2))+
scale_y_continuous(breaks=50)+
scale_colour_manual(name='Participating families', values=col_vector)+
theme(strip.background = element_blank(),
strip.text.x = element_blank())
carriers=data.human$subject.code[which(data.human$stool_totalst131>0)]
data.human$carrier=rep(NA, nrow(data.human))
data.human[which(match(data.human$subject.code, carriers)>0),]$carrier=1
data.human$carrier[which(is.na(data.human$carrier))]=0
data.human$age_cat<-rep(NA, nrow(data.human))
data.human$age_cat[which(data.human$cov9_age<2)]=0
data.human$age_cat[which(data.human$cov9_age>60)]=2
data.human$age_cat[which(is.na(data.human$age_cat))]=1
data.human$age_cat=as.factor(data.human$age_cat)
data.human$cov8_housing=factor(data.human$cov8_housing)
data.human$member_cat=as.factor(ifelse(data.human$cov1_member<5, 0, 1))
data.human $ cov10_st131infection=as.factor(data.human $ cov10_st131infection)
data.human$carrier=as.factor(data.human$carrier)
forglm=with(data.human, cbind.data.frame(subject.code, age_cat, cov9_age, cov1_member, member_cat, cov8_housing,cov10_st131infection, cov2_chrdz, cov3_incontinent, gender, cov5_admit1yr, cov6_travel,carrier))
forglm=unique(forglm)
carriageglm=glm(carrier~cov9_age+gender+member_cat+cov10_st131infection+cov2_chrdz+cov3_incontinent+cov8_housing, data=forglm, family = "binomial")
library(finalfit)
library(dplyr)
explanatory = c("cov9_age", "gender", 'member_cat','cov10_st131infection', "cov2_chrdz", "cov3_incontinent",'cov8_housing')
dependent = 'carrier'
forglm %>%
mutate(
gender = ff_label(gender, "Gender"),
cov9_age=ff_label(cov9_age, "Age"),
member_cat=ff_label(member_cat, "Family size of 4 or less"),
cov10_st131infection=ff_label(cov10_st131infection, "Infected with ST131"),
cov2_chrdz=ff_label(cov2_chrdz, "Chronic disease"),
cov3_incontinent=ff_label(cov3_incontinent, 'Incontinence'),
cov8_housing=ff_label(cov8_housing, 'Type of housing' )
) %>%
finalfit(dependent, explanatory)
data.human=data.human[order(data.human$time_point),]
data.human=data.human[order(data.human$subject.code),]
only1stool=as.character(data.human$subject.code[which(data.human$stool_total==1)])
data.human.msm=data.human[-match(only1stool,data.human$subject.code),]
human_summary <-statetable.msm(stoolpcr_state, subject.code, data=data.human.msm)
forglm %>%
mutate(
gender = ff_label(gender, "Gender"),
cov9_age=ff_label(cov9_age, "Age"),
member_cat=ff_label(member_cat, "Family size of 4 or less"),
cov10_st131infection=ff_label(cov10_st131infection, "Infected with ST131"),
cov2_chrdz=ff_label(cov2_chrdz, "Chronic disease"),
cov3_incontinent=ff_label(cov3_incontinent, 'Incontinence'),
cov8_housing=ff_label(cov8_housing, 'Type of housing' )
) %>%
finalfit(dependent, explanatory)
forglm %>%
mutate(
gender = ff_label(gender, "Gender"),
cov9_age=ff_label(cov9_age, "Age"),
member_cat=ff_label(member_cat, "Family size of 4 or less"),
cov10_st131infection=ff_label(cov10_st131infection, "Infected with ST131"),
cov2_chrdz=ff_label(cov2_chrdz, "Chronic disease"),
cov3_incontinent=ff_label(cov3_incontinent, 'Incontinence'),
cov8_housing=ff_label(cov8_housing, 'Type of housing' )
) %>%
finalfit(dependent, explanatory)->t
t
forglm %>%
mutate(
gender = ff_label(gender, "Gender"),
cov9_age=ff_label(cov9_age, "Age"),
member_cat=ff_label(member_cat, "Family size of 4 or less"),
cov10_st131infection=ff_label(cov10_st131infection, "Infected with ST131"),
cov2_chrdz=ff_label(cov2_chrdz, "Chronic disease"),
cov3_incontinent=ff_label(cov3_incontinent, 'Incontinence'),
cov8_housing=ff_label(cov8_housing, 'Type of housing' )
) %>%
or_plot(dependent, explanatory)
rm(list=ls())
setwd("/Users/moyin/Desktop/angelsfly/NItrialsimulation/codes/") #set working directory
source(file = 'causalinference 11 March 2019 (no AT and matching).R')
######parameters######
n=220
p.experiment=0.35
p.stdcare=0.4
true.effect=p.experiment-p.stdcare
nIterations=1000
NImargin=0.1
#Run simulations for case 1.1 (both groups non compliant)
b1both<-bias.nonconfounding(n=n, p.experiment=p.experiment, p.stdcare=p.stdcare,  nIterations=nIterations, interval = interval, noncomply = "both", ymin=-0.3, ymax=0.2, true.effect=true.effect)
t1both<-type1.nonconfounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  nIterations=nIterations, interval = interval,noncomply = "both", ymin=0, ymax=0.5)
p1both<-power.nonconfounding(n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, interval = interval,noncomply = "both", ymin=0, ymax=1)
case1both<-ggarrange(b1both,
ggarrange (t1both, p1both, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case1both, top = text_grob("Case 1.1: Non-compliance caused by non confounding processes affecting both groups", face = "bold", size = 12))
ggsave(filename = paste("case1.1", Sys.Date(), ".pdf"), width = 13.9, height = 10.2, units = c("in"))
#Run simulations for case 1.2 (one groups non compliant)
b1one<-bias.nonconfounding  (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare,  nIterations=nIterations, interval = interval, noncomply = "experimental", ymin=-0.3, ymax=0.2, true.effect=true.effect)
t1one<-type1.nonconfounding (n=n, p.experiment=p.experiment, NImargin=NImargin,  nIterations=nIterations, interval = interval,noncomply = "experimental", ymin=0, ymax=0.5)
p1one<-power.nonconfounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, interval = interval,noncomply = "experimental", ymin=0, ymax=1)
case1.2<-ggarrange(b1one,
ggarrange (t1one, p1one, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case1.2, top = text_grob("Case 1.2: Non-compliance caused by non confounding processes affecting intervention or control group", face = "bold", size = 12))
ggsave(filename = paste("case1.2", Sys.Date(), ".pdf"), width = 13.9, height = 10.2, units = "in")
#Run simulations for case 2.1: Non-compliance caused by confounding process (affect both groups)
## higher value of confounder makes intervention less likely, outcome more likely
b2both1<-bias.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, interval = interval,confounder.intervention="Decrease likelihood", confounder.outcome="Increase likelihood",nIterations=nIterations, noncomply = "both", ymin=-0.6, ymax=0.3, true.effect=true.effect)
t2both1<-type1.confounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  confounder.intervention="Decrease likelihood", confounder.outcome="Increase likelihood", nIterations=nIterations, interval = interval, noncomply = "both", ymin=0, ymax=1)
p2both1<-power.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, confounder.intervention="Decrease likelihood", confounder.outcome="Increase likelihood", interval = interval, noncomply = "both", ymin=0, ymax=1)
case2.11<-ggarrange(b2both1,
ggarrange (t2both1, p2both1, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case2.11, top = text_grob("Case 2.11: Non-compliance caused by confounding process (affect both groups)-higher value of confounder makes intervention less likely, outcome more likely", face = "bold", size = 12))
ggsave(filename = paste("case2.11", Sys.Date(), ".pdf"), width = 13.9, height = 10.2, units = "in")
## higher value of confounder makes intervention more likely, outcome more likely
b2both2<-bias.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, interval = interval,confounder.intervention="Increase likelihood", confounder.outcome="Increase likelihood",nIterations=nIterations, noncomply = "both", ymin=-0.4, ymax=0.6, true.effect=true.effect)
t2both2<-type1.confounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  confounder.intervention="Increase likelihood", confounder.outcome="Increase likelihood", nIterations=nIterations, interval = interval, noncomply = "both", ymin=0, ymax=0.4)
p2both2<-power.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, confounder.intervention="Increase likelihood", confounder.outcome="Increase likelihood", interval = interval, noncomply = "both", ymin=0, ymax=1)
case2.12<-ggarrange(b2both2,
ggarrange (t2both2, p2both2, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case2.12, top = text_grob("Case 2.12: Non-compliance caused by confounding process (affect both groups)-higher value of confounder makes intervention more likely, outcome more likely", face = "bold", size = 12))
ggsave(filename = paste("case2.12", Sys.Date(), ".pdf"), width = 13.9, height = 10.2, units = "in")
## higher value of confounder makes intervention less likely, outcome less likely
b2both3<-bias.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, interval = interval,confounder.intervention="Decrease likelihood", confounder.outcome="Decrease likelihood",nIterations=nIterations, noncomply = "both", ymin=-0.6, ymax=0.6, true.effect=true.effect)
t2both3<-type1.confounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  confounder.intervention="Decrease likelihood", confounder.outcome="Decrease likelihood", nIterations=nIterations, interval = interval, noncomply = "both", ymin=0, ymax=0.35)
p2both3<-power.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, confounder.intervention="Decrease likelihood", confounder.outcome="Decrease likelihood", interval = interval, noncomply = "both", ymin=0, ymax=1)
case2.13<-ggarrange(b2both3,
ggarrange (t2both3, p2both3, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case2.13, top = text_grob("Case 2.13: Non-compliance caused by confounding process (affect both groups)-higher value of confounder makes intervention less likely, outcome less likely", face = "bold", size = 12))
ggsave(filename = paste("case2.13", Sys.Date(), ".pdf"), width = 13.9, height = 10.2, units = "in")
## higher value of confounder makes intervention more likely, outcome less likely
b2both4<-bias.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, interval = interval,confounder.intervention="Increase likelihood", confounder.outcome="Decrease likelihood",nIterations=nIterations, noncomply = "both", ymin=-0.6, ymax=0.4, true.effect=true.effect)
t2both4<-type1.confounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  confounder.intervention="Increase likelihood", confounder.outcome="Decrease likelihood", nIterations=nIterations, interval = interval, noncomply = "both", ymin=0, ymax=1)
p2both4<-power.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, confounder.intervention="Increase likelihood", confounder.outcome="Decrease likelihood", interval = interval, noncomply = "both", ymin=0, ymax=1)
case2.14<-ggarrange(b2both4,
ggarrange (t2both4, p2both4, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case2.14, top = text_grob("Case 2.14: Non-compliance caused by confounding process (affect both groups)-higher value of confounder makes intervention more likely, outcome less likely", face = "bold", size = 12))
ggsave(filename = paste("case2.14", Sys.Date(), ".pdf"), width = 13.9, height = 10.2, units = c("in"))
#Run simulations for case 2.2: Non-compliance caused by confounding process (affect intervention groups)
b2one<-bias.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, interval = interval,confounder.intervention="Increase likelihood", confounder.outcome="Decrease likelihood",nIterations=nIterations, noncomply = "experimental", ymin=-0.6, ymax=0.4, true.effect=true.effect)
t2one<-type1.confounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  confounder.intervention="Increase likelihood", confounder.outcome="Decrease likelihood", nIterations=nIterations, interval = interval, noncomply = "experimental", ymin=0, ymax=1)
p2one<-power.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, confounder.intervention="Increase likelihood", confounder.outcome="Decrease likelihood", interval = interval, noncomply = "experimental", ymin=0, ymax=1)
case2.21<-ggarrange(b2one,
ggarrange (t2one, p2one, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case2.21, top = text_grob("Case 2.21: Non-compliance caused by confounding process (affect intervention group)-higher value of confounder makes outcome more likely", face = "bold", size = 12))
ggsave(filename = paste("case2.21", Sys.Date(), ".pdf"), width = 13.9, height = 10.2, units = "in")
ggsave(filename = paste("case1.1", Sys.Date(), ".pdf"), width = 10, height = 13.9, units = c("in"))
setwd("/Users/moyin/Desktop/angelsfly/NItrialsimulation/codes/") #set working directory
source(file = 'causalinference 11 March 2019 (no AT and matching).R')
######parameters######
n=220
p.experiment=0.35
p.stdcare=0.4
true.effect=p.experiment-p.stdcare
nIterations=1000
NImargin=0.1
width=10
height= 15
#Run simulations for case 1.1 (both groups non compliant)
b1both<-bias.nonconfounding(n=n, p.experiment=p.experiment, p.stdcare=p.stdcare,  nIterations=nIterations, interval = interval, noncomply = "both",true.effect=true.effect)
nIterations=100
#Run simulations for case 1.1 (both groups non compliant)
b1both<-bias.nonconfounding(n=n, p.experiment=p.experiment, p.stdcare=p.stdcare,  nIterations=nIterations, interval = interval, noncomply = "both",true.effect=true.effect)
b1both
b1both
#Run simulations for case 1.1 (both groups non compliant)
b1both<-bias.nonconfounding(n=n, p.experiment=p.experiment, p.stdcare=p.stdcare,  nIterations=nIterations, interval = interval, noncomply = "both",true.effect=true.effect)
t1both<-type1.nonconfounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  nIterations=nIterations, interval = interval,noncomply = "both")
p1both<-power.nonconfounding(n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, interval = interval,noncomply = "both")
case1both<-ggarrange(b1both,
ggarrange (t1both, p1both, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case1both, top = text_grob("Case 1.1: Non-compliance caused by non confounding processes affecting both groups", face = "bold", size = 12))
annotate_figure(case1both, top = text_grob("Case 1.1: Non-compliance caused by non confounding processes affecting both groups", face = "bold", size = 12))
p1one<-power.nonconfounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, interval = interval,noncomply = "experimental")
case1.2<-ggarrange(b1one,
ggarrange (t1one, p1one, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case1.2, top = text_grob("Case 1.2: Non-compliance caused by non confounding processes affecting intervention or control group", face = "bold", size = 12))
setwd("/Users/moyin/Desktop/angelsfly/NItrialsimulation/codes/") #set working directory
source(file = 'causalinference 11 March 2019 (no AT and matching).R')
p2both3<-power.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, confounder.intervention="Decrease likelihood", confounder.outcome="Decrease likelihood", interval = interval, noncomply = "both")
case2.13<-ggarrange(b2both3,
ggarrange (t2both3, p2both3, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case2.13, top = text_grob("Case 2.13: Non-compliance caused by confounding process (affect both groups)-higher value of confounder makes intervention less likely, outcome less likely", face = "bold", size = 12))
setwd("/Users/moyin/Desktop/angelsfly/NItrialsimulation/codes/") #set working directory
source(file = 'causalinference 11 March 2019 (no AT and matching).R')
#Run simulations for case 1.1 (both groups non compliant)
b1both<-bias.nonconfounding(n=n, p.experiment=p.experiment, p.stdcare=p.stdcare,  nIterations=nIterations, interval = interval, noncomply = "both",true.effect=true.effect)
t1both<-type1.nonconfounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  nIterations=nIterations, interval = interval,noncomply = "both")
p1both<-power.nonconfounding(n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, interval = interval,noncomply = "both")
case1both<-ggarrange(b1both,
ggarrange (t1both, p1both, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case1both, top = text_grob("Case 1.1: Non-compliance caused by non confounding processes affecting both groups", face = "bold", size = 12))
annotate_figure(case1both, top = text_grob("Case 1.1: Non-compliance caused by non confounding processes affecting both groups", face = "bold", size = 12))
#Run simulations for case 1.2 (one groups non compliant)
b1one<-bias.nonconfounding  (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare,  nIterations=nIterations, interval = interval, noncomply = "experimental", true.effect=true.effect)
t1one<-type1.nonconfounding (n=n, p.experiment=p.experiment, NImargin=NImargin,  nIterations=nIterations, interval = interval,noncomply = "experimental")
p1one<-power.nonconfounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, interval = interval,noncomply = "experimental")
case1.2<-ggarrange(b1one,
ggarrange (t1one, p1one, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case1.2, top = text_grob("Case 1.2: Non-compliance caused by non confounding processes affecting intervention or control group", face = "bold", size = 12))
#Run simulations for case 2.1: Non-compliance caused by confounding process (affect both groups)
## higher value of confounder makes intervention less likely, outcome more likely
b2both1<-bias.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, interval = interval,confounder.intervention="Decrease likelihood", confounder.outcome="Increase likelihood",nIterations=nIterations, noncomply = "both", true.effect=true.effect)
t2both1<-type1.confounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  confounder.intervention="Decrease likelihood", confounder.outcome="Increase likelihood", nIterations=nIterations, interval = interval, noncomply = "both")
p2both1<-power.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, confounder.intervention="Decrease likelihood", confounder.outcome="Increase likelihood", interval = interval, noncomply = "both")
case2.11<-ggarrange(b2both1,
ggarrange (t2both1, p2both1, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case2.11, top = text_grob("Case 2.11: Non-compliance caused by confounding process (affect both groups)-higher value of confounder makes intervention less likely, outcome more likely", face = "bold", size = 12))
## higher value of confounder makes intervention more likely, outcome more likely
b2both2<-bias.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, interval = interval,confounder.intervention="Increase likelihood", confounder.outcome="Increase likelihood",nIterations=nIterations, noncomply = "both", true.effect=true.effect)
t2both2<-type1.confounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  confounder.intervention="Increase likelihood", confounder.outcome="Increase likelihood", nIterations=nIterations, interval = interval, noncomply = "both")
p2both2<-power.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, confounder.intervention="Increase likelihood", confounder.outcome="Increase likelihood", interval = interval, noncomply = "both")
case2.12<-ggarrange(b2both2,
ggarrange (t2both2, p2both2, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case2.12, top = text_grob("Case 2.12: Non-compliance caused by confounding process (affect both groups)-higher value of confounder makes intervention more likely, outcome more likely", face = "bold", size = 12))
## higher value of confounder makes intervention less likely, outcome less likely
b2both3<-bias.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, interval = interval,confounder.intervention="Decrease likelihood", confounder.outcome="Decrease likelihood",nIterations=nIterations, noncomply = "both", true.effect=true.effect)
t2both3<-type1.confounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  confounder.intervention="Decrease likelihood", confounder.outcome="Decrease likelihood", nIterations=nIterations, interval = interval, noncomply = "both")
p2both3<-power.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, confounder.intervention="Decrease likelihood", confounder.outcome="Decrease likelihood", interval = interval, noncomply = "both")
case2.13<-ggarrange(b2both3,
ggarrange (t2both3, p2both3, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case2.13, top = text_grob("Case 2.13: Non-compliance caused by confounding process (affect both groups)-higher value of confounder makes intervention less likely, outcome less likely", face = "bold", size = 12))
## higher value of confounder makes intervention more likely, outcome less likely
b2both4<-bias.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, interval = interval,confounder.intervention="Increase likelihood", confounder.outcome="Decrease likelihood",nIterations=nIterations, noncomply = "both", true.effect=true.effect)
t2both4<-type1.confounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  confounder.intervention="Increase likelihood", confounder.outcome="Decrease likelihood", nIterations=nIterations, interval = interval, noncomply = "both")
p2both4<-power.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, confounder.intervention="Increase likelihood", confounder.outcome="Decrease likelihood", interval = interval, noncomply = "both")
case2.14<-ggarrange(b2both4,
ggarrange (t2both4, p2both4, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case2.14, top = text_grob("Case 2.14: Non-compliance caused by confounding process (affect both groups)-higher value of confounder makes intervention more likely, outcome less likely", face = "bold", size = 12))
#Run simulations for case 2.2: Non-compliance caused by confounding process (affect intervention groups)
b2one<-bias.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, interval = interval,confounder.intervention="Increase likelihood", confounder.outcome="Decrease likelihood",nIterations=nIterations, noncomply = "experimental", true.effect=true.effect)
t2one<-type1.confounding(n=n, p.experiment=p.experiment, NImargin=NImargin,  confounder.intervention="Increase likelihood", confounder.outcome="Decrease likelihood", nIterations=nIterations, interval = interval, noncomply = "experimental")
p2one<-power.confounding (n=n, p.experiment=p.experiment, p.stdcare=p.stdcare, NImargin=NImargin, nIterations=nIterations, confounder.intervention="Increase likelihood", confounder.outcome="Decrease likelihood", interval = interval, noncomply = "experimental")
case2.21<-ggarrange(b2one,
ggarrange (t2one, p2one, ncol = 2, labels = c(paste(LETTERS[2:3], sep="")), legend=NULL),
nrow=2,
labels ='A',
common.legend = TRUE, legend = "bottom" )
annotate_figure(case2.21, top = text_grob("Case 2.21: Non-compliance caused by confounding process (affect intervention group)-higher value of confounder makes outcome more likely", face = "bold", size = 12))
